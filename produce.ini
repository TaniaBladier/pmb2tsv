[]
default = %{'pmb-{}-{}.tsv'.format(status, lang) for status in ('gold', 'silver') for lang in ('en', 'de', 'it', 'nl')}

### TOKEN NUMBERS ##############################################################

[%{name}.toknum]
dep.parse = %{name}.parse.tags
dep.parse2toknum = parse2toknum.py
deps = cac.py
recipe = python3 %{parse2toknum} < %{parse} > %{target}

### TOKENS ####################################################################

[%{name}.token]
dep.parse = %{name}.parse.tags
dep.parse2token = parse2token.py
deps = cac.py
recipe = python3 %{parse2token} < %{parse} > %{target}

### SEMTAGS ###################################################################

[%{name}.sem]
dep.parse = %{name}.parse.tags
dep.parse2sem = parse2sem.py
deps = cac.py
recipe = python3 %{parse2sem} < %{parse} > %{target}

### LEMMAS ####################################################################

[%{name}.lemma]
dep.parse = %{name}.parse.tags
dep.parse2lemma = parse2lemma.py
deps = cac.py
recipe = python3 %{parse2lemma} < %{parse} > %{target}

### DEPENDENCIES ##############################################################

[%{name}.der]
dep.parse = %{name}.parse.tags
dep.boxer = boxer2
deps = libswipl.so.7.2
recipe = LD_LIBRARY_PATH=. ./%{boxer} --input %{parse} --semantics der > %{target}

[%{name}.dep]
dep.der = %{name}.der
dep.der2dep = der2dep.pl
recipe = swipl -l %{der2dep} -g main %{der} > %{target}

### SUPERTAGS #################################################################

[%{name}.super]
dep.parse = %{name}.parse.tags
dep.parse2super = parse2super.py
deps = cac.py
recipe = python3 %{parse2super} < %{parse} > %{target}

### CONSTITUENTS ##############################################################

[%{name}.const]
dep.parse = %{name}.parse.tags
dep.parse2const = parse2const.py
deps = cac.py
recipe = python3 %{parse2const} < %{parse} > %{target}

### TSV OUTPUT ################################################################

# Where it all comes together.

[%{name}.tsv]
dep.toknum = %{name}.toknum
dep.token = %{name}.token
dep.sem = %{name}.sem
dep.lemma = %{name}.lemma
dep.dep = %{name}.dep
dep.super = %{name}.super
dep.const = %{name}.const
dep.blockpaste = blockpaste.py
deps = util.py
recipe = python3 %{blockpaste} %{toknum} %{token} %{sem} %{lemma} %{dep} %{super} %{const} > %{target}
